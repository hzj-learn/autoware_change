<launch>

  <!-- setting path parameter -->
  <arg name="topic_pose_stamped" default="/ndt_pose" />
  <arg name="topic_twist_stamped" default="/estimate_twist" />

  <!-- Tablet UI -->
  
  <include file="$(find runtime_manager)/launch_files/tablet_socket.launch"/>
 

  <!-- vel_pose_mux 把车辆CAN信号的位姿和速度转换成话题-->
  <include file="$(find autoware_connector)/launch/vel_pose_connect.launch">
    <arg name="topic_pose_stamped" value="$(arg topic_pose_stamped)" />
    <arg name="topic_twist_stamped" value="$(arg topic_twist_stamped)" />
  </include>

  <!--note-tianyu-TODO-->

    <!-- 加载多条.txt全局路径，并进行可视化 -->
  <!-- waypoint_loader 
  <node pkg="rostopic" type="rostopic" name="config_waypoint_loader_rostopic"
        args="pub -l /config/waypoint_replanner autoware_config_msgs/ConfigWaypointReplanner
        '{multi_lane_csv: '$(env HOME)/.autoware/data/path/sil_env_path.txt', replanning_mode: false, velocity_max: 20.0, velocity_min: 4.0, accel_limit: 0.98, decel_limit: 0.98, radius_thresh: 20.0, radius_min: 6.0, resample_mode: true, resample_interval: 1.0, velocity_offset: 4, end_point_offset: 5}' "
  />
  <include file="$(find waypoint_maker)/launch/waypoint_loader.launch">
    <arg name="load_csv" value="true" />
    <arg name="multi_lane_csv" value="$(env HOME)/.autoware/data/path/sil_env_path.txt" />
  </include>
  -->
  

  <!-- lane_navi 加载多条.csv全局路径，并进行可视化-->
  <!--
  <node pkg="lane_planner" type="lane_navi" name="lane_navi" />
  -->
  <include file="$(find lane_planner)/launch/lane_navi.launch" />

  <!-- lane_rule 根据vector_map给定红绿灯信息和已经加载的多条全局路径，生成不同的颜色话题的全局路径（这种路径的速度是不一样的）-->
  <node pkg="lane_planner" type="lane_rule" name="lane_rule" output="log" />

  <!-- lane_stop  根据vector_map给定红绿灯信息判断是否需要停车-->
  <node pkg="lane_planner" type="lane_stop" name="lane_stop" />

  <!-- lane_select 选择一条最终执行的的base_waypoints（涉及变道的决策规划）-->
  <node pkg="lane_planner" type="lane_select" name="lane_select" />

</launch>
